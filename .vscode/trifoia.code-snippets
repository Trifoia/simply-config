{
	// Place your litmos-reports workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"Method Stub": {
    "description": "Scaffold for methods",
		"scope": "javascript",
		"prefix": ["methodstub", "stubmethod"],
		"body": [
			"'use strict';",
			"",
			"/**",
			" * @typedef $3",
			" * @property $5",
			" */",
			"",
			"/**",
			" * $2",
			" *",
			" * @param {$3} params $4",
			" */",
			"const $1 = async (params) => {",
			"  $0",
			"};",
			"",
			"module.exports = $1;",
			""
    ]
	},
	"Unit Test Stub": {
    "description": "Scaffold for unit tests",
		"scope": "javascript",
		"prefix": ["unittest"],
		"body": [
			"'use strict';",
			"",
			"const assert = require('assert').strict;",
			"",
			"const $1 = require('$2');",
			"",
			"describe('${TM_FILENAME_BASE/(.+)-test$/$1/}', function() {",
			"  $0",
			"});",
			""
    ]
	},
	"Slow Unit Test Stub": {
		"description": "Scaffold for slow unit tests",
		"scope": "javascript",
		"prefix": ["slowunittest"],
		"body": [
			"'use strict';",
			"",
			"/* eslint-disable no-unused-vars */",
			"const { it, before, beforeEach, after, afterEach } = require('../test-utils/slow-hooks.js');",
			"/* eslint-enable */",
			"",
			"const assert = require('assert').strict;",
			"",
			"const $1 = require('$2');",
			"",
			"describe('${TM_FILENAME_BASE/(.+)-test$/$1/}', function() {",
			"  $0",
			"});",
			""
    ]
	},
	"Slow Hooks": {
		"description": "Import the slow hooks for slowly running tests",
		"scope": "javascript",
		"prefix": ["slowhooks", "shooks"],
		"body": [
			"/* eslint-disable no-unused-vars */",
			"const { it, before, beforeEach, after, afterEach } = require('$0');",
			"/* eslint-enable */",
    ]
	},
	"It": {
    "description": "It-should statement used in unit testing",
		"scope": "javascript",
		"prefix": "itshould",
		"body": [
			"it('should $1', async () => {",
			"  $0",
			"});"
		]
	},
	"Require Destructure": {
    "description": "Shortcut for destructuring imported objects",
		"scope": "javascript",
		"prefix": "destructure",
		"body": "const { $0 } = require('$1');"
	},
	"Throws Async": {
    "description": "Check that an async function throws wth async",
		"scope": "javascript",
		"prefix": ["throwsasync", "asyncthrow"],
		"body": [
			"try {",
			"  await $1;",
			"  assert.fail('should have thrown an error');",
			"} catch (e) {",
			"  assert.ok(e instanceof $2);",
			"}$0"
		]
	}
}